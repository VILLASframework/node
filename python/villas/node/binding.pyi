"""
@generated by mypy (partial). Manual edits applied for function decorators.
isort:skip_file

Author: Kevin Vu te Laar <vu.te@rwth-aachen.de>
SPDX-FileCopyrightText: 2014-2025 Institute for Automation of Complex Power Systems, RWTH Aachen University
SPDX-License-Identifier: Apache-2.0
"""

from _typeshed import Incomplete
from typing import Any, Callable

logger: Incomplete

class SamplesArray:
    def __init__(self, length: int) -> None: ...
    def __len__(self) -> int: ...
    def __getitem__(self, idx: int | slice): ...
    def __copy__(self) -> None: ...
    def __deepcopy__(self) -> None: ...

def _warn_if_not_implemented(
    func: Callable[..., Any],
) -> Callable[..., Any]: ...
def memory_init(*args): ...
def node_check(node): ...
def node_destroy(node): ...
def node_details(node): ...
def node_input_signals_max_cnt(node): ...
def node_is_enabled(node): ...
def node_is_valid_name(name: str): ...
def node_name(node): ...
def node_name_full(node): ...
def node_name_short(node): ...
def node_netem_fds(*args): ...
def node_new(config, uuid: str | None = None): ...
def node_output_signals_max_cnt(node): ...
def node_pause(node): ...
def node_poll_fds(*args): ...
def node_prepare(node): ...
@_warn_if_not_implemented
def node_read(node, samples, sample_length, count): ...
def node_restart(node): ...
def node_resume(node): ...
@_warn_if_not_implemented
def node_reverse(node): ...
def node_start(node): ...
def node_stop(node): ...
def node_to_json(node): ...
def node_to_json_str(node): ...
@_warn_if_not_implemented
def node_write(node, samples, count): ...
def sample_length(*args) -> None: ...
def sample_pack(*args) -> None: ...
def sample_unpack(*args) -> None: ...

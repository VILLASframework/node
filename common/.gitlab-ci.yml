variables:
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: recursive
  DOCKER_TAG_DEV: ${CI_BUILD_REF_SLUG}
  DOCKER_IMAGE_DEV: villas/common-dev

stages:
- prepare
- build
- test

# Stage: prepare
##############################################################################

# Build docker image which is used to build & test VILLAScommon
docker-dev:
  stage: prepare
  image: docker:19.03
  script:
  - docker build -t ${DOCKER_IMAGE_DEV}:${DOCKER_TAG_DEV} .
  tags:
  - docker

# Stage: build
##############################################################################

build:source:
  stage: build
  script:
  - mkdir build && cd build && cmake .. && make -j8
  artifacts:
    expire_in: 1 week
    name: ${CI_PROJECT_NAME}-${CI_BUILD_REF}
    paths:
    - build/
  image: ${DOCKER_IMAGE_DEV}:${DOCKER_TAG_DEV}
  tags:
  - docker

# Stage: test
##############################################################################

test:unit:
  stage: test
  dependencies:
  - build:source
  script:
  - build/tests/unit/unit-tests-common
  image: ${DOCKER_IMAGE_DEV}:${DOCKER_TAG_DEV}
  tags:
  - docker

test:cppcheck:
  stage: test
  script:
    - cppcheck -j $(nproc)
               --max-configs=32
               --error-exitcode=1
               --quiet
               --inline-suppr
               --enable=warning,performance,portability,information,missingInclude
               --std=c++11
               -I include
               lib/
               tests/unit/ | tee cppcheck.log
  image: ${DOCKER_IMAGE_DEV}:${DOCKER_TAG_DEV}
  dependencies:
    - build:source
  tags:
    - docker
  artifacts:
    when: on_failure
    paths:
      - cppcheck.log
    expose_as: cppcheck
